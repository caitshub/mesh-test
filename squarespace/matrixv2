<!-- Interactive Matrix and Lightbox Code (Corrected) -->
<!-- START: Copy everything below this line -->

<!-- PART 1: HTML for the Interactive Matrix -->
<div class="matrix-component">
    <h1 class="matrix-title-main">globally normalised [%]</h1>
    <h2 class="matrix-title-postsynaptic">postsynaptic cell type</h2>
    <div class="matrix-title-presynaptic"><span>presynaptic cell type</span></div>
    <div class="matrix-grid-container">
        <div class="matrix-grid">
            <div class="grid-cell empty"></div>
            <div class="grid-cell col-label" data-col="msn"><span>MSN</span></div>
            <div class="grid-cell col-label" data-col="stn"><span>STN</span></div>
            <div class="grid-cell col-label" data-col="tan"><span>TAN</span></div>
            <div class="grid-cell col-label" data-col="gpe"><span>GPe</span></div>
            <div class="grid-cell col-label" data-col="gpi"><span>GPi</span></div>
            <div class="grid-cell col-label" data-col="lts"><span>LTS</span></div>
            <div class="grid-cell col-label" data-col="int1"><span>INT1</span></div>
            <div class="grid-cell col-label" data-col="int2"><span>INT2</span></div>
            <div class="grid-cell col-label" data-col="int3"><span>INT3</span></div>
            <div class="grid-cell row-label" data-row="da">DA</div>
            <div class="grid-cell data-cell" data-row="da" data-col="msn" data-target="cell-DA-MSN" style="background-color: hsl(0, 0%, 96.6%);">1.8</div>
            <div class="grid-cell data-cell" data-row="da" data-col="stn" data-target="cell-DA-STN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="da" data-col="tan" data-target="cell-DA-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="da" data-col="gpe" data-target="cell-DA-GPe" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="da" data-col="gpi" data-target="cell-DA-GPi" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="da" data-col="lts" data-target="cell-DA-LTS" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="da" data-col="int1" data-target="cell-DA-INT1" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="da" data-col="int2" data-target="cell-DA-INT2" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="da" data-col="int3" data-target="cell-DA-INT3" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell row-label" data-row="lman">LMAN</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="msn" data-target="cell-LMAN-MSN" style="background-color: hsl(0, 0%, 77.1%);">12.1</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="stn" data-target="cell-LMAN-STN" style="background-color: hsl(0, 0%, 99.2%);">0.4</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="tan" data-target="cell-LMAN-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="gpe" data-target="cell-LMAN-GPe" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="gpi" data-target="cell-LMAN-GPi" style="background-color: hsl(0, 0%, 99.4%);">0.3</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="lts" data-target="cell-LMAN-LTS" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="int1" data-target="cell-LMAN-INT1" style="background-color: hsl(0, 0%, 99.4%);">0.3</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="int2" data-target="cell-LMAN-INT2" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="lman" data-col="int3" data-target="cell-LMAN-INT3" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell row-label" data-row="hvc">HVC</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="msn" data-target="cell-HVC-MSN" style="background-color: hsl(0, 0%, 0.0%); color: white;">52.9</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="stn" data-target="cell-HVC-STN" style="background-color: hsl(0, 0%, 99.1%);">0.5</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="tan" data-target="cell-HVC-TAN" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="gpe" data-target="cell-HVC-GPe" style="background-color: hsl(0, 0%, 98.1%);">1.0</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="gpi" data-target="cell-HVC-GPi" style="background-color: hsl(0, 0%, 96.2%);">2.0</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="lts" data-target="cell-HVC-LTS" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="int1" data-target="cell-HVC-INT1" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="int2" data-target="cell-HVC-INT2" style="background-color: hsl(0, 0%, 99.1%);">0.5</div>
            <div class="grid-cell data-cell" data-row="hvc" data-col="int3" data-target="cell-HVC-INT3" style="background-color: hsl(0, 0%, 96.0%);">2.1</div>
            <div class="grid-cell row-label" data-row="msn">MSN</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="msn" data-target="cell-MSN-MSN" style="background-color: hsl(0, 0%, 99.4%);">0.3</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="stn" data-target="cell-MSN-STN" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="tan" data-target="cell-MSN-TAN" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="gpe" data-target="cell-MSN-GPe" style="background-color: hsl(0, 0%, 97.0%);">1.6</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="gpi" data-target="cell-MSN-GPi" style="background-color: hsl(0, 0%, 91.1%);">4.7</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="lts" data-target="cell-MSN-LTS" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="int1" data-target="cell-MSN-INT1" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="int2" data-target="cell-MSN-INT2" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="msn" data-col="int3" data-target="cell-MSN-INT3" style="background-color: hsl(0, 0%, 99.2%);">0.4</div>
            <div class="grid-cell row-label" data-row="stn">STN</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="msn" data-target="cell-STN-MSN" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="stn" data-target="cell-STN-STN" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="tan" data-target="cell-STN-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="gpe" data-target="cell-STN-GPe" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="gpi" data-target="cell-STN-GPi" style="background-color: hsl(0, 0%, 98.3%);">0.9</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="lts" data-target="cell-STN-LTS" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="int1" data-target="cell-STN-INT1" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="int2" data-target="cell-STN-INT2" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="stn" data-col="int3" data-target="cell-STN-INT3" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell row-label" data-row="tan">TAN</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="msn" data-target="cell-TAN-MSN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="stn" data-target="cell-TAN-STN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="tan" data-target="cell-TAN-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="gpe" data-target="cell-TAN-GPe" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="gpi" data-target="cell-TAN-GPi" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="lts" data-target="cell-TAN-LTS" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="int1" data-target="cell-TAN-INT1" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="int2" data-target="cell-TAN-INT2" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="tan" data-col="int3" data-target="cell-TAN-INT3" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell row-label" data-row="gpe">GPe</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="msn" data-target="cell-GPe-MSN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="stn" data-target="cell-GPe-STN" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="tan" data-target="cell-GPe-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="gpe" data-target="cell-GPe-GPe" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="gpi" data-target="cell-GPe-GPi" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="lts" data-target="cell-GPe-LTS" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="int1" data-target="cell-GPe-INT1" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="int2" data-target="cell-GPe-INT2" style="background-color: hsl(0, 0%, 99.2%);">0.4</div>
            <div class="grid-cell data-cell" data-row="gpe" data-col="int3" data-target="cell-GPe-INT3" style="background-color: hsl(0, 0%, 99.4%);">0.3</div>
            <div class="grid-cell row-label" data-row="gpi">GPi</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="msn" data-target="cell-GPi-MSN" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="stn" data-target="cell-GPi-STN" style="background-color: hsl(0, 0%, 98.5%);">0.8</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="tan" data-target="cell-GPi-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="gpe" data-target="cell-GPi-GPe" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="gpi" data-target="cell-GPi-GPi" style="background-color: hsl(0, 0%, 98.7%);">0.7</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="lts" data-target="cell-GPi-LTS" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="int1" data-target="cell-GPi-INT1" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="int2" data-target="cell-GPi-INT2" style="background-color: hsl(0, 0%, 99.4%);">0.3</div>
            <div class="grid-cell data-cell" data-row="gpi" data-col="int3" data-target="cell-GPi-INT3" style="background-color: hsl(0, 0%, 99.4%);">0.3</div>
            <div class="grid-cell row-label" data-row="lts">LTS</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="msn" data-target="cell-LTS-MSN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="stn" data-target="cell-LTS-STN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="tan" data-target="cell-LTS-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="gpe" data-target="cell-LTS-GPe" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="gpi" data-target="cell-LTS-GPi" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="lts" data-target="cell-LTS-LTS" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="int1" data-target="cell-LTS-INT1" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="int2" data-target="cell-LTS-INT2" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="lts" data-col="int3" data-target="cell-LTS-INT3" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell row-label" data-row="int1">INT1</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="msn" data-target="cell-INT1-MSN" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="stn" data-target="cell-INT1-STN" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="tan" data-target="cell-INT1-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="gpe" data-target="cell-INT1-GPe" style="background-color: hsl(0, 0%, 98.9%);">0.6</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="gpi" data-target="cell-INT1-GPi" style="background-color: hsl(0, 0%, 98.5%);">0.8</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="lts" data-target="cell-INT1-LTS" style="background-color: hsl(0, 0%, 99.8%);">0.1</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="int1" data-target="cell-INT1-INT1" style="background-color: hsl(0, 0%, 99.4%);">0.3</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="int2" data-target="cell-INT1-INT2" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int1" data-col="int3" data-target="cell-INT1-INT3" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell row-label" data-row="int2">INT2</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="msn" data-target="cell-INT2-MSN" style="background-color: hsl(0, 0%, 95.3%);">2.5</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="stn" data-target="cell-INT2-STN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="tan" data-target="cell-INT2-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="gpe" data-target="cell-INT2-GPe" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="gpi" data-target="cell-INT2-GPi" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="lts" data-target="cell-INT2-LTS" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="int1" data-target="cell-INT2-INT1" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="int2" data-target="cell-INT2-INT2" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int2" data-col="int3" data-target="cell-INT2-INT3" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell row-label" data-row="int3">INT3</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="msn" data-target="cell-INT3-MSN" style="background-color: hsl(0, 0%, 86.0%);">7.4</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="stn" data-target="cell-INT3-STN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="tan" data-target="cell-INT3-TAN" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="gpe" data-target="cell-INT3-GPe" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="gpi" data-target="cell-INT3-GPi" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="lts" data-target="cell-INT3-LTS" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="int1" data-target="cell-INT3-INT1" style="background-color: hsl(0, 0%, 100.0%);">0.0</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="int2" data-target="cell-INT3-INT2" style="background-color: hsl(0, 0%, 99.6%);">0.2</div>
            <div class="grid-cell data-cell" data-row="int3" data-col="int3" data-target="cell-INT3-INT3" style="background-color: hsl(0, 0%, 99.4%);">0.3</div>
        </div>
    </div>
    <div class="gradient-bar-container">
        <div class="gradient-bar"></div>
        <div class="gradient-labels">
            <span>50</span><span>40</span><span>30</span><span>20</span><span>10</span><span>0</span>
        </div>
    </div>
</div>

<!-- PART 2: HTML for the Lightbox Popup -->
<div class="new-lightbox">
    <div class="new-lightbox-content">
        <span class="new-close-button">&times;</span>
        <div class="caption-top"></div>
        <div class="image-grid-container">
            <div class="img-wrapper" id="lightbox-img-wrapper-1">
                <img id="lightbox-img-1" src="" alt="Presynaptic neuron morphology">
                <div class="caption-overlay"></div>
            </div>
            <div class="img-wrapper-stacked">
                <div class="img-wrapper" id="lightbox-img-wrapper-2">
                    <img id="lightbox-img-2" src="" alt="3D synapse reconstruction">
                    <div class="caption-overlay"></div>
                </div>
                <div class="img-wrapper" id="lightbox-img-wrapper-3">
                    <img id="lightbox-img-3" src="" alt="Electron microscopy of synapse">
                    <div class="caption-overlay"></div>
                </div>
            </div>
            <div class="img-wrapper" id="lightbox-img-wrapper-4">
                <img id="lightbox-img-4" src="" alt="Postsynaptic neuron morphology">
                <div class="caption-overlay"></div>
            </div>
        </div>
        <div class="captions-bottom">
            <div class="caption-bottom-left"></div>
            <div class="caption-bottom-middle"></div>
            <div class="caption-bottom-right"></div>
        </div>
    </div>
</div>


<!-- PART 3: CSS for both Matrix and Lightbox -->
<style>
  /* --- MATRIX: BASE LAYOUT & RESPONSIVE ENGINE --- */
  .matrix-component {
    font-family: Arial, sans-serif;
    width: 100%;
    max-width: 1000px;
    margin: 0 auto;
    padding: 1em;
    box-sizing: border-box;
    display: grid;
    grid-template-areas:
      "title-main title-main title-main"
      ". title-post ."
      "title-pre grid gradient";
    grid-template-columns: auto 1fr auto;
    grid-template-rows: auto auto 1fr;
    gap: 0 15px;
    align-items: center;
  }
  .matrix-title-main { grid-area: title-main; text-align: center; font-weight: bold; font-size: 2em; margin-bottom: 0.5em; }
  .matrix-title-postsynaptic { grid-area: title-post; text-align: center; font-weight: bold; font-size: 1.2em; margin-bottom: 0.5em; color: #333; }
  .matrix-title-presynaptic { grid-area: title-pre; display: flex; align-items: center; justify-content: center; font-weight: bold; color: #333; }
  .matrix-title-presynaptic span { writing-mode: vertical-rl; transform: rotate(180deg); font-size: 1.2em; }
  .matrix-grid-container { grid-area: grid; }
  .gradient-bar-container { grid-area: gradient; display: flex; flex-direction: row; align-self: stretch; }

  /* --- MATRIX: DATA GRID STYLES --- */
  .matrix-grid { 
    display: grid; 
    grid-template-columns: minmax(50px, 0.7fr) repeat(9, minmax(50px, 1fr)); 
    gap: 0; 
    border: 1px solid #ccc; 
    border-width: 0 1px 1px 0; 
  }
  .grid-cell { 
    background-color: #fff; 
    display: flex; 
    align-items: center; 
    justify-content: center; 
    font-size: clamp(0.7rem, 1.5vw, 1rem); 
    border: 1px solid #ccc; 
    border-width: 1px 0 0 1px; 
    aspect-ratio: 1.5 / 1; 
    transition: background-color 0.2s ease-in-out;
  }
  .grid-cell.row-label { font-weight: bold; aspect-ratio: auto; }
  .grid-cell.col-label { font-weight: bold; }
  .grid-cell.col-label span { transform: rotate(-45deg); }
  .grid-cell.empty { background-color: transparent; border-color: transparent; }
  
  /* --- MATRIX: CELL INTERACTIVITY STYLES --- */
  .data-cell { position: relative; z-index: 1; }
  .data-cell:not(.not-interactive) { cursor: pointer; transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; }
  .data-cell:not(.not-interactive):hover { transform: scale(1.1); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3); z-index: 2; }
  .not-interactive { cursor: default; }
  .grid-cell.header-hover { background-color: #e0f3ff; }

  /* --- MATRIX: GRADIENT BAR --- */
  .gradient-bar { width: 25px; height: 100%; background: linear-gradient(to top, #ffffff, #808080, #000000); }
  .gradient-labels { display: flex; flex-direction: column; justify-content: space-between; margin-left: 5px; height: 100%; font-size: clamp(0.6rem, 1vw, 0.8rem); }

  /* --- MATRIX: RESPONSIVE STYLES FOR MOBILE --- */
  @media (max-width: 768px) {
    .matrix-component {
      grid-template-areas: "title-main" "title-post" "grid" "gradient";
      grid-template-columns: 1fr;
      grid-template-rows: auto auto auto auto;
      gap: 1em 0;
    }
    .matrix-title-presynaptic { display: none; }
    .matrix-grid-container { overflow-x: hidden; }
    .matrix-grid { grid-template-columns: 0.8fr repeat(9, 1fr); }
    .grid-cell { font-size: clamp(0.5rem, 2.5vw, 0.7rem); min-width: 0; aspect-ratio: 1.2 / 1; }
    .grid-cell.col-label span { transform: rotate(-65deg); }
    .gradient-bar-container { flex-direction: column; width: 100%; padding: 0 5%; box-sizing: border-box; align-self: auto; }
    .gradient-bar { width: 100%; height: 20px; background: linear-gradient(to left, #ffffff, #808080, #000000); }
    .gradient-labels { flex-direction: row; justify-content: space-between; width: 100%; height: auto; margin-left: 0; margin-top: 5px; font-size: 0.7rem; }
  }

  /* --- LIGHTBOX: CONTAINER AND VISIBILITY --- */
  .new-lightbox {
    display: flex;
    position: fixed;
    z-index: 999999;
    left: 0; top: 0;
    width: 100%; height: 100%;
    background-color: rgba(0, 0, 0, 0.85);
    align-items: center;
    justify-content: center;
    padding: 2vw;
    box-sizing: border-box;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.4s ease, visibility 0.4s ease;
  }
  .new-lightbox.lightbox-visible { opacity: 1; visibility: visible; }

  /* --- LIGHTBOX: MAIN CONTENT WRAPPER --- */
  .new-lightbox .new-lightbox-content {
    width: 100%;
    height: auto;
    max-width: 1200px;
    max-height: 90vh;
    display: grid;
    grid-template-rows: auto auto auto;
    gap: 15px;
    position: relative;
    background-color: rgba(231, 231, 231, 1);
    padding: 20px;
    box-sizing: border-box;
    overflow-y: auto;
  }

  /* --- LIGHTBOX: CLOSE BUTTON --- */
  .new-lightbox .new-close-button {
    position: absolute;
    top: 0px; right: 0px;
    color: #fff;
    font-size: 40px;
    font-weight: bold;
    cursor: pointer;
    z-index: 1100;
  }

  /* --- LIGHTBOX: TOP CAPTION --- */
  .new-lightbox .caption-top {
    grid-row: 1;
    background-color: rgba(255, 255, 255, 1);
    padding: 10px;
    color: #000;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: "Urbanist";
    font-weight: bold;
    font-size: 1.3em;
  }

  /* --- LIGHTBOX: IMAGE GRID --- */
  .new-lightbox .image-grid-container {
    grid-row: 2;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 15px;
    min-height: 0;
    overflow: hidden;
    align-items: start;
  }
  .new-lightbox .img-wrapper-stacked { display: grid; grid-template-rows: auto auto; gap: 15px; min-height: 0; }

  /* --- LIGHTBOX: IMAGE WRAPPER AND OVERLAY CAPTION --- */
  .new-lightbox .img-wrapper {
    background-color: rgba(0,0,0,0.05);
    overflow: hidden;
    min-height: 0;
    min-width: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    border: 1px solid rgba(0,0,0,0.1);
    box-sizing: border-box;
    position: relative; /* Positioning context for the overlay */
  }
  .new-lightbox .img-wrapper img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    max-width: 100%;
    max-height: 100%;
  }
  .new-lightbox .caption-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 2;
    background-color: rgba(0, 0, 0, 0.65);
    color: white;
    padding: 10px;
    box-sizing: border-box;
    text-align: center;
    font-family: "Urbanist", sans-serif;
    font-size: 0.9em;
  }
  .new-lightbox .caption-overlay:empty { display: none; }

  /* --- LIGHTBOX: BOTTOM CAPTIONS --- */
  .new-lightbox .captions-bottom {
    grid-row: 3;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 15px;
  }
  .new-lightbox .captions-bottom > div {
    background-color: rgba(255, 255, 255, 1);
    padding: 10px;
    color: #000;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-family: "Urbanist";
    font-weight: bold;
  }

  /* --- LIGHTBOX: RESPONSIVE STYLES FOR MOBILE --- */
  @media (max-width: 768px) {
    .new-lightbox .new-lightbox-content { padding: 10px; gap: 10px; max-height: 95vh; }
    .new-lightbox .image-grid-container { grid-template-columns: 1fr; }
    .new-lightbox .captions-bottom { grid-template-columns: 1fr; }
    .new-lightbox .caption-top { font-size: 1.1em; padding: 8px; }
    .new-lightbox .captions-bottom > div { font-size: 0.85em; }
    .new-lightbox .new-close-button { font-size: 35px; top: 5px; right: 10px; }
  }
</style>


<!-- PART 4: JAVASCRIPT for both Matrix and Lightbox (CORRECTED) -->
<script>
    // Data for each lightbox popup. Only cells with an entry here will be interactive.
    const lightboxData = {
        'cell-HVC-MSN': {
            img1: 'https://images.squarespace-cdn.com/content/6877b03b11b9de015acd8b39/be7d2191-78e3-47d5-8587-7ec8da2d88e0/250825_hvc_full_100%C2%B5m_v2.png?content-type=image%2Fpng',
            img2: 'https://images.squarespace-cdn.com/content/6877b03b11b9de015acd8b39/23faabb8-2701-4a0d-a256-f989c23def3e/250825_hvc_msn_syn_1%C2%B5m.png?content-type=image%2Fpng',
            img3: 'https://images.squarespace-cdn.com/content/6877b03b11b9de015acd8b39/7b99fc6b-3bae-4d94-9928-7996f615a250/250825_XY_9920_5976_10514_hvc_msn_syn.png?content-type=image%2Fpng',
            img4: 'https://images.squarespace-cdn.com/content/6877b03b11b9de015acd8b39/161707bf-9eeb-4307-a86d-ba9faf073959/250825_msn_full_100%C2%B5m.png?content-type=image%2Fpng',
            overlay1: 'Full presynaptic axon morphology.',
            overlay2: '3D reconstruction of synaptic contact.',
            overlay3: 'Electron microscopy of the synapse.',
            overlay4: 'Full postsynaptic dendrite morphology.',
            captionTop: 'HVC -> MSN: Detailed Synaptic Connection',
            captionBottomLeft: 'Presynaptic Neuron',
            captionBottomMiddle: 'This connection is vital for motor sequence learning. The images show morphological details from different microscopy techniques.',
            captionBottomRight: 'Postsynaptic Dendrite'
        },
        'cell-LMAN-MSN': {
            img1: 'https://images.squarespace-cdn.com/content/6877b03b11b9de015acd8b39/114dc0d6-be6e-48b6-8ae4-59c438c63b70/231121_stn_gpi_100%C2%B5m.png?content-type=image%2Fpng',
            img2: 'https://images.squarespace-cdn.com/content/6877b03b11b9de015acd8b39/114dc0d6-be6e-48b6-8ae4-59c438c63b70/231121_stn_gpi_100%C2%B5m.png?content-type=image%2Fpng',
            img3: 'https://images.squarespace-cdn.com/content/6877b03b11b9de015acd8b39/114dc0d6-be6e-48b6-8ae4-59c438c63b70/231121_stn_gpi_100%C2%B5m.png?content-type=image%2Fpng',
            img4: 'https://images.squarespace-cdn.com/content/6877b03b11b9de015acd8b39/114dc0d6-be6e-48b6-8ae4-59c438c63b70/231121_stn_gpi_100%C2%B5m.png?content-type=image%2Fpng',
            overlay1: 'Overlay caption for Image 1.',
            overlay2: 'Overlay caption for Image 2.',
            overlay3: 'Overlay caption for Image 3.',
            overlay4: 'Overlay caption for Image 4.',
            captionTop: 'LMAN -> MSN Connection',
            captionBottomLeft: 'Presynaptic',
            captionBottomMiddle: 'Information specific to the LMAN to MSN pathway.',
            captionBottomRight: 'Postsynaptic'
        },
    };

    function setupLightbox(data) {
        const lightboxModal = document.querySelector('.new-lightbox');
        if (!lightboxModal || lightboxModal.dataset.lightboxInitialized) {
            return window.openLightboxFunction || null;
        }
        lightboxModal.dataset.lightboxInitialized = 'true';

        const openLightbox = function(target) {
            const cellData = data[target];
            if (cellData) {
                // THE FIX IS HERE: Find all elements *inside* the open function.
                // This ensures they exist on the page when the code looks for them.
                const img1 = lightboxModal.querySelector('#lightbox-img-1');
                const img2 = lightboxModal.querySelector('#lightbox-img-2');
                const img3 = lightboxModal.querySelector('#lightbox-img-3');
                const img4 = lightboxModal.querySelector('#lightbox-img-4');
                const captionTopEl = lightboxModal.querySelector('.caption-top');
                const captionBottomLeftEl = lightboxModal.querySelector('.caption-bottom-left');
                const captionBottomMiddleEl = lightboxModal.querySelector('.caption-bottom-middle');
                const captionBottomRightEl = lightboxModal.querySelector('.caption-bottom-right');
                const overlay1 = lightboxModal.querySelector('#lightbox-img-wrapper-1 .caption-overlay');
                const overlay2 = lightboxModal.querySelector('#lightbox-img-wrapper-2 .caption-overlay');
                const overlay3 = lightboxModal.querySelector('#lightbox-img-wrapper-3 .caption-overlay');
                const overlay4 = lightboxModal.querySelector('#lightbox-img-wrapper-4 .caption-overlay');
                
                // Set images
                if (img1) img1.src = cellData.img1 || '';
                if (img2) img2.src = cellData.img2 || '';
                if (img3) img3.src = cellData.img3 || '';
                if (img4) img4.src = cellData.img4 || '';
                
                // Set main captions
                const captions = [
                    [captionTopEl, cellData.captionTop],
                    [captionBottomLeftEl, cellData.captionBottomLeft],
                    [captionBottomMiddleEl, cellData.captionBottomMiddle],
                    [captionBottomRightEl, cellData.captionBottomRight]
                ];
                captions.forEach(([element, text]) => {
                    if (element) {
                        element.style.display = text ? 'flex' : 'none';
                        element.textContent = text || '';
                    }
                });

                // Set overlay captions
                const overlays = [
                    [overlay1, cellData.overlay1],
                    [overlay2, cellData.overlay2],
                    [overlay3, cellData.overlay3],
                    [overlay4, cellData.overlay4]
                ];
                overlays.forEach(([element, text]) => {
                    if (element) {
                        element.textContent = text || '';
                    }
                });
                
                lightboxModal.classList.add('lightbox-visible');
            }
        };

        const closeLightbox = () => lightboxModal.classList.remove('lightbox-visible');
        
        // Setup closing listeners only once
        const closeButton = lightboxModal.querySelector('.new-close-button');
        if (closeButton) closeButton.addEventListener('click', closeLightbox);
        lightboxModal.addEventListener('click', (e) => {
            if (e.target === lightboxModal) closeLightbox();
        });
        window.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') closeLightbox();
        });

        window.openLightboxFunction = openLightbox;
        return openLightbox;
    }

    function setupGrid(openLightboxFunction, data) {
        if (!openLightboxFunction) return;
        document.querySelectorAll('.matrix-component:not([data-grid-initialized])').forEach(matrix => {
            matrix.dataset.gridInitialized = 'true';
            matrix.querySelectorAll('.data-cell').forEach(cell => {
                const target = cell.getAttribute('data-target');
                if (data && data[target]) {
                    cell.addEventListener('mouseover', function() {
                        const row = this.getAttribute('data-row');
                        const col = this.getAttribute('data-col');
                        matrix.querySelector(`.row-label[data-row="${row}"]`)?.classList.add('header-hover');
                        matrix.querySelector(`.col-label[data-col="${col}"]`)?.classList.add('header-hover');
                    });
                    cell.addEventListener('mouseout', function() {
                        const row = this.getAttribute('data-row');
                        const col = this.getAttribute('data-col');
                        matrix.querySelector(`.row-label[data-row="${row}"]`)?.classList.remove('header-hover');
                        matrix.querySelector(`.col-label[data-col="${col}"]`)?.classList.remove('header-hover');
                    });
                    cell.addEventListener('click', () => openLightboxFunction(target));
                } else {
                    cell.classList.add('not-interactive');
                }
            });
        });
    }

    function initializeAll() {
        const openFunc = setupLightbox(lightboxData);
        if (openFunc) {
            setupGrid(openFunc, lightboxData);
        }
    }
    document.addEventListener('DOMContentLoaded', initializeAll);
    window.setInterval(initializeAll, 500);
</script>

<!-- END: Copy everything above this line -->
